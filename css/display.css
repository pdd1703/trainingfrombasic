/* Sử dụng display block sẽ thành 1 khối nằm độc lập trong 1 hàng */
.block {
    background: red;
    height: 50px;
    display: block;
}

/* Sử dụng display none sẽ tự ẩn đi nội dung đã làm, ẩn đi thôi chứ không phải xoá */
.none {
    background: blue;
    color: white;
    /* display: none; */
}
/* Khi đặt display inline cho một phần tử, nó sẽ xuất hiện trên cùng một dòng với phần tử trước đó, nó sẽ tự chiếm phần cần thiết, không thể chỉnh độ rộng 
hoặc chiều cao nhưng vẫn có thể thay đổi padding và margin cho phù hợp */
.inline {
    display: inline;
    border: 1px solid #000;
    padding: 5px;
    margin-right: 10px;
}
.menu {
    background-color: #333;
    text-align: center;
}
 /* Giống inline nhưng có để điều chỉnh độ rộng hoặc độ cao */
.inline-block {
    display: inline-block;
    padding: 10px 20px;
    margin: 0 10px;
    color: #fff;
}
/* Biến 1 phần tử thành 1 list chứa các item, ở đó ta có thể chỉnh sửa các item đều nhau dễ dàng */
.item {
    display: list-item;
    margin: 5px 0;
    padding-left: 20px;
    color: #333;
}
/* Sử dụng nó để tạo ra 1 container linh hoạt, thoải mái căn chỉnh theo trục ngang và trục dọc */
/* Dễ dàng thích ứng với các kích cỡ màn hình khác nhau */
.flex {
    display: flex;
    justify-content: space-between;
    align-items: center; 
    border: 2px solid #333;
    padding: 20px;
}

.flex-item {
    width: 100px;
    height: 100px;
    background-color: #007bff;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 30px;
}

/* Chia câu trúc trang thành các hàng và các cột, tạo ra các phần tử con sắp xếp dạng lưới */
.grid {
    display: grid;
    grid-template-columns: repeat(7, 100px); /* 6 cột / 1 lần */
    grid-gap: 10px; 
}
.cell {
    width: 100px;
    height: 100px;
    background-color: lightblue;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
}
/* Đoạn này em đang test để hiểu hơn :v  */
.cell-1 {
    grid-column: 8 / 8;
}
.cell-3 {
    grid-column: 1 / 5;
}
.cell-2 {
    grid-column: 1 / 5;
}